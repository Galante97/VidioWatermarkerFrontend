@import "node_modules/mathsass/dist/_math.scss";

$view-bg-color: #f4f8ff;
$element-border-color-inactive: #cdd9ed;
$element-border-color-active: #5d85f8;

// =============================
// Loader
// =============================

$loader-colors: dodgerblue, mediumspringgreen, crimson, peachpuff, chocolate,
  pink;
$loader-dash: 63;
$loader-duration: length($loader-colors) * 1s;
$loader-duration-alt: $loader-duration / length($loader-colors);
$loader-keyframe: 1 / (length($loader-colors) * 2) * 100;

.loader {
  animation: loader-turn $loader-duration-alt linear infinite;
  padding: 1rem;
  max-width: 60px;
  width: 100%;

  @keyframes loader-turn {
    50% {
      transform: rotate(180deg);
    }
    100% {
      transform: rotate(720deg);
    }
  }
}

.loader__value {
  animation: loader-stroke $loader-duration linear infinite;
  fill: none;
  stroke-dasharray: $loader-dash;
  stroke-dashoffset: $loader-dash;
  stroke-linecap: round;
  stroke-width: 4;

  @for $i from 1 through length($loader-colors) {
    &:nth-child(#{$i}) {
      stroke: nth($loader-colors, $i);

      @if $i > 1 {
        animation-delay: ($i - 1) * $loader-duration-alt;
      }
    }
  }

  @keyframes loader-stroke {
    #{$loader-keyframe * 1%} {
      stroke-dashoffset: 0;
    }
    #{$loader-keyframe * 2%},
    100% {
      stroke-dashoffset: $loader-dash;
    }
  }
}

::ng-deep .mat-dialog-container {
  background: #323232;
  border-radius: 20px;
  color: #c5c5c5;
  /*border-style: solid;
    border-width: 1px;
    border-color: $element-border-color-active;*/
}

.matDialogContainer {
  display: flex;
  flex-direction: row;

}

.textContainer {
  position: relative;
  width: 100%;
}


.spinnerContainer {
  height: 270px;

}

.spinnerSub {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
